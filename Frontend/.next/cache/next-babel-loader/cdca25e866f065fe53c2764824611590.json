{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\Reading stuffs\\\\Sketches\\\\Tracthon\\\\components\\\\assistance\\\\appointmentForm.jsx\",\n    _this3 = this;\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport AssistanceType from \"./assistanceType\";\nimport FirstStep from \"./firstStep\";\nimport SecondStep from \"./secondStep\";\nimport { Paper, TabPanel, Tabs, Tab } from \"@material-ui/core\";\nimport { Component } from \"react\";\n\nvar AppointmentForm = /*#__PURE__*/function (_Component) {\n  _inherits(AppointmentForm, _Component);\n\n  var _super = _createSuper(AppointmentForm);\n\n  function AppointmentForm() {\n    var _this;\n\n    _classCallCheck(this, AppointmentForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      step: 0,\n      assistanceType: \"\",\n      category: \"\",\n      description: \"\",\n      meetingType: \"\",\n      meetingTime: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleStepChange\", function (step) {\n      _this.setState({\n        step: step\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFormDataChange\", function (field, value) {\n      _this.setState(_defineProperty({}, field, value));\n    });\n\n    return _this;\n  }\n\n  _createClass(AppointmentForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state);\n      var step = this.state.step;\n      var CurrentStep;\n\n      switch (step) {\n        case 0:\n          CurrentStep = __jsx(AssistanceType, {\n            setStep: this.handleStepChange,\n            setFormData: this.handleFormDataChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 11\n            }\n          });\n          break;\n\n        case 1:\n          CurrentStep = __jsx(FirstStep, {\n            category: this.state.category,\n            description: this.state.description,\n            setStep: this.handleStepChange,\n            setFormData: this.handleFormDataChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 11\n            }\n          });\n          break;\n\n        case 2:\n          CurrentStep = __jsx(SecondStep, {\n            type: this.state.meetingType,\n            time: this.state.meetingTime,\n            setStep: this.handleStepChange,\n            setFormData: this.handleFormDataChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 11\n            }\n          });\n          break;\n\n        case 3:\n          CurrentStep = __jsx(CompletedStep, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 23\n            }\n          });\n      }\n\n      var value = 0;\n      return __jsx(Paper, {\n        align: \"left\",\n        style: {\n          position: \"relative\",\n          height: 300,\n          marginTop: 20,\n          padding: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }\n      }, CurrentStep, __jsx(Tabs, {\n        variant: \"scrollable\",\n        classes: {\n          root: classes.tabs\n        },\n        value: this.state.option,\n        indicatorColor: \"secondary\",\n        textColor: \"secondary\",\n        onChange: this.handleOptionSelect,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, options.map(function (option) {\n        return __jsx(Tab, {\n          key: option,\n          classes: {\n            root: classes.tab\n          },\n          label: option,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }\n        });\n      })));\n    }\n  }]);\n\n  return AppointmentForm;\n}(Component);\n\nvar CompletedStep = function CompletedStep() {\n  return __jsx(\"div\", {\n    align: \"center\",\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, \"Completed!\"));\n};\n\n_c = CompletedStep;\nexport default AppointmentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompletedStep\");","map":{"version":3,"sources":["D:/Reading stuffs/Sketches/Tracthon/components/assistance/appointmentForm.jsx"],"names":["AssistanceType","FirstStep","SecondStep","Paper","TabPanel","Tabs","Tab","Component","AppointmentForm","step","assistanceType","category","description","meetingType","meetingTime","setState","field","value","console","log","state","CurrentStep","handleStepChange","handleFormDataChange","position","height","marginTop","padding","root","classes","tabs","option","handleOptionSelect","options","map","tab","CompletedStep"],"mappings":"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","sourcesContent":["import AssistanceType from \"./assistanceType\";\r\nimport FirstStep from \"./firstStep\";\r\nimport SecondStep from \"./secondStep\";\r\n\r\nimport { Paper, TabPanel, Tabs, Tab } from \"@material-ui/core\";\r\nimport { Component } from \"react\";\r\n\r\nclass AppointmentForm extends Component {\r\n  state = {\r\n    step: 0,\r\n    assistanceType: \"\",\r\n    category: \"\",\r\n    description: \"\",\r\n    meetingType: \"\",\r\n    meetingTime: \"\",\r\n  };\r\n\r\n  handleStepChange = (step) => {\r\n    this.setState({ step: step });\r\n  };\r\n\r\n  handleFormDataChange = (field, value) => {\r\n    this.setState({ [field]: value });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state);\r\n\r\n    const { step } = this.state;\r\n\r\n    let CurrentStep;\r\n\r\n    switch (step) {\r\n      case 0:\r\n        CurrentStep = (\r\n          <AssistanceType\r\n            setStep={this.handleStepChange}\r\n            setFormData={this.handleFormDataChange}\r\n          />\r\n        );\r\n        break;\r\n      case 1:\r\n        CurrentStep = (\r\n          <FirstStep\r\n            category={this.state.category}\r\n            description={this.state.description}\r\n            setStep={this.handleStepChange}\r\n            setFormData={this.handleFormDataChange}\r\n          />\r\n        );\r\n        break;\r\n      case 2:\r\n        CurrentStep = (\r\n          <SecondStep\r\n            type={this.state.meetingType}\r\n            time={this.state.meetingTime}\r\n            setStep={this.handleStepChange}\r\n            setFormData={this.handleFormDataChange}\r\n          />\r\n        );\r\n        break;\r\n      case 3:\r\n        CurrentStep = <CompletedStep />;\r\n    }\r\n\r\n    const value = 0;\r\n\r\n    return (\r\n      <Paper\r\n        align=\"left\"\r\n        style={{\r\n          position: \"relative\",\r\n          height: 300,\r\n          marginTop: 20,\r\n          padding: 20,\r\n        }}\r\n      >\r\n        {CurrentStep}\r\n\r\n        <Tabs\r\n          variant=\"scrollable\"\r\n          classes={{\r\n            root: classes.tabs,\r\n          }}\r\n          value={this.state.option}\r\n          indicatorColor=\"secondary\"\r\n          textColor=\"secondary\"\r\n          onChange={this.handleOptionSelect}\r\n        >\r\n          {options.map((option) => (\r\n            <Tab\r\n              key={option}\r\n              classes={{\r\n                root: classes.tab,\r\n              }}\r\n              label={option}\r\n            />\r\n          ))}\r\n        </Tabs>\r\n\r\n        {/*\r\n        <Tabs\r\n          orientation=\"vertical\"\r\n          variant=\"scrollable\"\r\n          value={value}\r\n          //onChange={handleChange}\r\n          //className={classes.tabs}\r\n        >\r\n          <Tab value={value} index={0}>\r\n            Item One\r\n          </Tab>\r\n          <Tab value={value} index={1}>\r\n            Item Two\r\n          </Tab>\r\n          <Tab value={value} index={2}>\r\n            Item Three\r\n          </Tab>\r\n        \r\n        </Tabs>*/}\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nconst CompletedStep = () => {\r\n  return (\r\n    <div align=\"center\">\r\n      <h1>Completed!</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppointmentForm;\r\n"]},"metadata":{},"sourceType":"module"}